# Do not use Kong Ingress Controller
ingressController:
  enabled: false

image:
  repository: kong/kong-gateway
  tag: "3.7"

# Mount the secret created earlier
secretVolumes:
  - kong-cluster-cert

env:
  # This is a control_plane node
  role: control_plane
  # These certificates are used for control plane / data plane communication
  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  admin_gui_url: http://192.168.1.3:8002
  admin_gui_api_url: http://192.168.1.3:8001
  admin_listen: 0.0.0.0:8001, 0.0.0.0:8444 http2
  # Database
  # CHANGE THESE VALUES
  database: postgres

  # Kong Manager password
  password: kong_admin_password

# Enterprise functionality
enterprise:
  enabled: false
  license_secret: kong-enterprise-license

# The control plane serves the Admin API
admin:
  enabled: true
  http:
    enabled: true
    servicePort: 8001
    containerPort: 8001
    parameters: []

manager:
  enabled: true
  type: ClusterIP
  http:
    enabled: true
    servicePort: 8002
    containerPort: 8002
    parameters: []
# Clustering endpoints are required in hybrid mode
cluster:
  enabled: true
  tls:
    enabled: true

clustertelemetry:
  enabled: true
  tls:
    enabled: true

# Optional features
manager:
  enabled: false

# These roles will be served by different Helm releases
proxy:
  enabled: false

 # This is for testing purposes only
 # DO NOT DO THIS IN PRODUCTION
 # Your cluster needs a way to create PersistentVolumeClaims
 # if this option is enabled
postgresql:
  enabled: true
  auth:
    postgresPassword: kong
    username: kong
    password: kong
    database: kong
  postgresqlUsername: kong
  postgresqlPassword: kong
  postgresqlDatabase: kong